name: Run Build

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

concurrency:
  # Cancels the workflow
  # when another event in the same context happens.
  # If it's a PR, context is the pull request number.
  # Otherwise, it uses the Git reference(branch or tag name).
  group: >
    ${{ github.workflow }}
    ${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}-latest
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu, windows, macos]
        include:
          - runner: ubuntu
            target: linux
            build-path: build/linux/x64/release/bundle/
          - runner: windows
            target: windows
            build-path: build/windows/x64/runner/Release/
          - runner: macos
            target: macos
            build-path: build/macos/Build/Products/Release/*.app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true
          submodules: true
      
      - name: Normalize Git
        run: |
          git config --global core.autocrlf false
          git config --global core.filemode false

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
      
      - name: Setup sccache
        uses: Mozilla-Actions/sccache-action@v0.0.9

      - name: Set sccache environment variables
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      
      - name: Set sccache environment variables (Windows)
        if: runner.os == 'Windows'
        run: |
          Add-Content -Path $env:GITHUB_ENV -Value "SCCACHE_GHA_ENABLED=true"
          Add-Content -Path $env:GITHUB_ENV -Value "RUSTC_WRAPPER=sccache"

      - name: Install Linux dependencies
        if: matrix.target == 'linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ninja-build libgtk-3-dev libasound2-dev libmpv-dev
          version: 1

      - name: Linux symlink fixup
        if: matrix.target == 'linux'
        run: |
          sudo update-alternatives --install \
              /usr/lib/x86_64-linux-gnu/libblas.so.3 \
              libblas.so.3-x86_64-linux-gnu \
              /usr/lib/x86_64-linux-gnu/blas/libblas.so.3 \
              10

          sudo update-alternatives --install \
              /usr/lib/x86_64-linux-gnu/liblapack.so.3 \
              liblapack.so.3-x86_64-linux-gnu \
              /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3 \
              10

      - name: Install Rinf CLI tool
        uses: baptiste0928/cargo-install@v3
        with:
          crate: rinf_cli

      - name: Generate Rinf bindings
        run: rinf gen

      - name: Build the app
        run: flutter build -v ${{ matrix.target }} --release

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: ${{ matrix.build-path }}
