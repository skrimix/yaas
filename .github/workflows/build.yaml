name: Run Build

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

concurrency:
  # Cancels the workflow
  # when another event in the same context happens.
  # If it's a PR, context is the pull request number.
  # Otherwise, it uses the Git reference(branch or tag name).
  group: >
    ${{ github.workflow }}
    ${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}-latest
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu, windows]
        include:
          - runner: ubuntu
            target: linux
          - runner: windows
            target: windows
          #- runner: macos
          #  target: macos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            target
            ~/.pub-cache
          key: >
            ${{ matrix.runner }}-${{ matrix.target }}
            ${{ hashFiles('**/Cargo.toml', '**/pubspec.yaml') }}
          restore-keys: |
            ${{ matrix.runner }}-${{ matrix.target }}
            ${{ matrix.runner }}

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.target == 'linux'
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: ninja-build libgtk-3-dev libasound2-dev
          version: 1.0

      - name: Install rinf_cli from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: rinf_cli

      - name: Generate Rinf bindings
        run: $HOME/.cargo/bin/rinf gen

      - name: Build the app
        if: matrix.target == 'linux'
        run: flutter build linux --release

      - name: Build the app
        if: matrix.target == 'windows'
        run: flutter build windows --release

      - name: Build the app
        if: matrix.target == 'macos'
        run: flutter build macos --release

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: |
            build/windows/x64/runner/Release/
            build/linux/x64/release/bundle/
            build/macos/Build/Products/Release/
